{"version":3,"sources":["components/ph-bar.jsx","components/Ph-line.jsx","components/ph-average-line.jsx","components/temperature-line chart.jsx","components/ph.jsx","components/temperature-gauge.jsx","components/temperature-meter.jsx","components/temperature.jsx","components/navigation.jsx","App.js","reportWebVitals.js","index.js"],"names":["ReactFC","fcRoot","FusionCharts","Widgets","FusionTheme","charts","dataSource","chart","theme","caption","subcaption","lowerLimit","upperLimit","numberSuffix","chartBottomMargin","valueFontSize","valueFontBold","colorRange","color","minValue","maxValue","label","pointers","pointer","value","annotations","origw","origh","autoscale","groups","id","items","type","x","y","tox","toy","fillcolor","fontSize","text","Phbar","width","dataFormat","React","Component","yaxis","title","min","max","numbersuffix","rotatelabels","setadaptiveymin","data","Phline","PHavaverageLine","props","state","series","name","options","height","dropShadow","enabled","top","left","blur","opacity","toolbar","show","colors","dataLabels","stroke","curve","align","grid","borderColor","row","markers","size","xaxis","categories","legend","position","horizontalAlign","floating","offsetY","offsetX","this","TemperatureLine","useStyles","makeStyles","root","flexGrow","paper","padding","spacing","textAlign","palette","secondary","Math","floor","random","Ph","classes","className","Grid","container","item","xs","sm","md","Paper","justify","Temperaturegauge","console","log","sparkline","plotOptions","radialBar","startAngle","endAngle","track","background","strokeWidth","margin","formatter","val","fill","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","labels","setState","lowerlimit","upperlimit","showvalue","showtooltip","colorrange","minvalue","maxvalue","code","dials","dial","Temperaturemeter","Temperature","steps","format","Navigation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09440aa9.chunk.js","sourcesContent":["import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React, { Component } from \"react\";\r\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\r\n\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    theme: \"fusion\",\r\n    caption: \"PH range\",\r\n    subcaption: \"\",\r\n    lowerLimit: \"0\",\r\n    upperLimit: \"14\",\r\n    numberSuffix: \" \",\r\n    chartBottomMargin: \"40\",\r\n    valueFontSize: \"11\",\r\n    valueFontBold: \"0\",\r\n  },\r\n  colorRange: {\r\n    color: [\r\n      {\r\n        minValue: \"0\",\r\n        maxValue: \"6.9\",\r\n        label: \"Acidic\",\r\n        color: \"#F2726F\",\r\n      },\r\n      {\r\n        minValue: \"7\",\r\n        maxValue: \"7.9\",\r\n        label: \"Neutral\",\r\n        color: \"#017827\",\r\n      },\r\n      {\r\n        minValue: \"8\",\r\n        maxValue: \"14\",\r\n        label: \"Alkaline\",\r\n        color: \"#34156e\",\r\n      },\r\n    ],\r\n  },\r\n  pointers: {\r\n    pointer: [\r\n      {\r\n        value: \"7\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  annotations: {\r\n    origw: \"400\",\r\n    origh: \"190\",\r\n    autoscale: \"1\",\r\n    groups: [\r\n      {\r\n        id: \"range\",\r\n        items: [\r\n          {\r\n            id: \"rangeBg\",\r\n            type: \"rectangle\",\r\n            x: \"$chartCenterX-115\",\r\n            y: \"$chartEndY-20\",\r\n            tox: \"$chartCenterX +115\",\r\n            toy: \"$chartEndY-5\",\r\n            fillcolor: \"#0075c2\",\r\n          },\r\n          {\r\n            id: \"rangeText\",\r\n            type: \"Text\",\r\n            fontSize: \"11\",\r\n            fillcolor: \"#ffffff\",\r\n            text: \"Recommended Utilization PH Range : 7-8\",\r\n            x: \"$chartCenterX\",\r\n            y: \"$chartEndY-12\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Phbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"hlineargauge\"\r\n        width=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Phbar;\r\n","import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React from \"react\";\r\n\r\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\r\n\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    caption: \"Average Daily PH Value\",\r\n    yaxis: {\r\n      title: {\r\n        text: \"PH value\",\r\n      },\r\n      min: 0,\r\n      max: 14,\r\n    },\r\n    subcaption: \"\",\r\n    numbersuffix: \" \",\r\n    rotatelabels: \"1\",\r\n    setadaptiveymin: \"1\",\r\n    theme: \"fusion\",\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Mon\",\r\n      value: \"7.1\",\r\n    },\r\n    {\r\n      label: \"Tue\",\r\n      value: \"7.5\",\r\n    },\r\n    {\r\n      label: \"Wed\",\r\n      value: \"6\",\r\n    },\r\n    {\r\n      label: \"Thu\",\r\n      value: \"7.9\",\r\n    },\r\n    {\r\n      label: \"Fri\",\r\n      value: \"7.5\",\r\n    },\r\n    {\r\n      label: \"sat\",\r\n      value: \"8.9\",\r\n    },\r\n    {\r\n      label: \"sun\",\r\n      value: \"7\",\r\n    },\r\n  ],\r\n};\r\n\r\nclass Phline extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"line\"\r\n        width=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phline;\r\n","import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass PHavaverageLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [8, 7.9, 7.6, 7.5, 7.4, 7.1, 8],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [6, 7, 7.1, 6.5, 7, 6.9, 6.8],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 200,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low PH of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"PH value\",\r\n          },\r\n          min: 0,\r\n          max: 14,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PHavaverageLine;\r\n","import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass TemperatureLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low Temperature of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"Temperature\",\r\n          },\r\n          min: 5,\r\n          max: 40,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemperatureLine;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Phbar from \"./ph-bar\";\r\nimport Phline from \"./Ph-line\";\r\nimport PHavaverageLine from \"./ph-average-line\";\r\n\r\nimport TemperatureLine from \"./temperature-line chart\";\r\nimport \"./temperature.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst value = Math.floor(Math.random() * 101);\r\n\r\nexport default function Ph() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"temperature-container\">\r\n      <h1 className=\"project-heading\">Ph sensor Data </h1>\r\n\r\n      <div className=\"temperature-sub-container\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={12}>\r\n              <Paper className={classes.paper}>\r\n                <Phbar />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={8}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <Phline />{\" \"}\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={2}>\r\n              <Paper className={classes.paper}>\r\n                <h3 className=\"temperature-heading\">Current PH value</h3>\r\n                <h1 className=\"temperature-value\">7 </h1>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid justify=\"center\" item xs={12} sm={12}>\r\n              <Paper className={classes.paper}>\r\n                <PHavaverageLine />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        );\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass Temperaturegauge extends React.Component {\r\n  constructor(props) {\r\n    console.log(props.value);\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [Math.floor(Math.random() * 101)],\r\n      options: {\r\n        chart: {\r\n          type: \"radialBar\",\r\n          offsetY: -20,\r\n          sparkline: {\r\n            enabled: true,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          radialBar: {\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            track: {\r\n              background: \"#e7e7e7\",\r\n              strokeWidth: \"97%\",\r\n              margin: 5, // margin is in pixels\r\n              dropShadow: {\r\n                enabled: false,\r\n                top: 2,\r\n                left: 0,\r\n                color: \"#999\",\r\n                opacity: 1,\r\n                blur: 2,\r\n              },\r\n            },\r\n            dataLabels: {\r\n              name: {\r\n                show: true,\r\n              },\r\n              value: {\r\n                offsetY: -40,\r\n                fontSize: \"22px\",\r\n                formatter: function (val) {\r\n                  return val + \" ℃\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          padding: {\r\n            top: -10,\r\n          },\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shade: \"light\",\r\n            shadeIntensity: 0.4,\r\n            inverseColors: false,\r\n            opacityFrom: 1,\r\n            opacityTo: 1,\r\n            stops: [0, 50, 53, 91],\r\n          },\r\n        },\r\n        labels: [\"Temperature\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ series: [this.props.value] });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"chart\" className=\"chart\">\r\n        console.log(this.props.value);\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"radialBar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temperaturegauge;\r\n","import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React, { Component } from \"react\";\r\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\r\n\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\nconst dataSource = {\r\n  chart: {\r\n    caption: \"Temperature\",\r\n    lowerlimit: \"0\",\r\n    upperlimit: \"100\",\r\n    showvalue: \"1\",\r\n    numbersuffix: \" ℃\",\r\n    theme: \"fusion\",\r\n    showtooltip: \"0\",\r\n  },\r\n  colorrange: {\r\n    color: [\r\n      {\r\n        minvalue: \"0\",\r\n        maxvalue: \"20\",\r\n        code: \"#2aafc7\",\r\n      },\r\n      {\r\n        minvalue: \"20\",\r\n        maxvalue: \"40\",\r\n        code: \" #5fb154\",\r\n      },\r\n      {\r\n        minvalue: \"40\",\r\n        maxvalue: \"65\",\r\n        code: \" #f04400\",\r\n      },\r\n      {\r\n        minvalue: \"65\",\r\n        maxvalue: \"100\",\r\n        code: \"#c43535\",\r\n      },\r\n    ],\r\n  },\r\n  dials: {\r\n    dial: [\r\n      {\r\n        value: \"30\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Temperaturemeter extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"angulargauge\"\r\n        width=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temperaturemeter;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Temperaturegauge from \"./temperature-gauge\";\r\nimport Thermometer from \"react-thermometer-component\";\r\nimport TemperatureLine from \"./temperature-line chart\";\r\nimport Temperaturemeter from \"./temperature-meter\";\r\nimport \"./temperature.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst value = Math.floor(Math.random() * 101);\r\n\r\nexport default function Temperature() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"temperature-container\">\r\n      <h1 className=\"project-heading\">Temperature sensor Data </h1>\r\n\r\n      <div className=\"temperature-sub-container\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                <Temperaturegauge value={value} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                <Temperaturemeter value={value} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                <Thermometer\r\n                  theme=\"light\"\r\n                  value={value}\r\n                  max=\"100\"\r\n                  steps=\"3\"\r\n                  format=\"°C\"\r\n                  size=\"large\"\r\n                  height=\"300\"\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Paper className={classes.paper}>\r\n                <h3 className=\"temperature-heading\">Current Temperature</h3>\r\n                <h1 className=\"temperature-value\">{value} °C</h1>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid justify=\"center\" item xs={12} sm={12}>\r\n              <Paper className={classes.paper}>\r\n                <TemperatureLine />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        );\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nexport const Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>Home</li>\r\n        <li>Temperature</li>\r\n        <li>Ph</li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Ph from \"./components/ph\";\nimport Temperature from \"./components/temperature\";\nimport { Navigation } from \"./components/navigation\";\nimport \"./App.css\";\nimport \"./components/temperature.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"layout\">\n        <Navigation />\n        <div className=\"body\">\n          <h1 className=\"project-heading\">\n            Water quality monitoring and disease prevention\n          </h1>\n\n          <Temperature />\n          <Ph />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}