[{"D:\\GitHub\\fyp\\src\\index.js":"1","D:\\GitHub\\fyp\\src\\reportWebVitals.js":"2","D:\\GitHub\\fyp\\src\\login.jsx":"3","D:\\GitHub\\fyp\\src\\signup.jsx":"4","D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx":"5","D:\\GitHub\\fyp\\src\\components\\temperature.jsx":"6","D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx":"7","D:\\GitHub\\fyp\\src\\components\\ph.jsx":"8","D:\\GitHub\\fyp\\src\\components\\ph-bar.jsx":"9","D:\\GitHub\\fyp\\src\\components\\Ph-line.jsx":"10","D:\\GitHub\\fyp\\src\\components\\ph-average-line.jsx":"11","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx":"12","D:\\GitHub\\fyp\\src\\components\\navigation.jsx":"13","D:\\GitHub\\fyp\\src\\components\\home.jsx":"14","D:\\GitHub\\fyp\\src\\components\\turbity.jsx":"15","D:\\GitHub\\fyp\\src\\components\\time-line-serieschart.jsx":"16","D:\\GitHub\\fyp\\src\\components\\SignUp.jsx":"17","D:\\GitHub\\fyp\\src\\components\\login.jsx":"18","D:\\GitHub\\fyp\\src\\components\\WaterLevel.jsx":"19","D:\\GitHub\\fyp\\src\\Auth.js":"20","D:\\GitHub\\fyp\\src\\firebase.js":"21","D:\\GitHub\\fyp\\src\\App.js":"22","D:\\GitHub\\fyp\\src\\components\\global state\\SensorData.js":"23"},{"size":500,"mtime":1613935049235,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":1297,"mtime":1609134579562,"results":"27","hashOfConfig":"25"},{"size":1284,"mtime":1609133478338,"results":"28","hashOfConfig":"25"},{"size":2025,"mtime":1625597887693,"results":"29","hashOfConfig":"25"},{"size":3159,"mtime":1625650714163,"results":"30","hashOfConfig":"25"},{"size":2126,"mtime":1609691519160,"results":"31","hashOfConfig":"25"},{"size":1506,"mtime":1625597513309,"results":"32","hashOfConfig":"25"},{"size":2220,"mtime":1609706224671,"results":"33","hashOfConfig":"25"},{"size":1442,"mtime":1609706471753,"results":"34","hashOfConfig":"25"},{"size":2118,"mtime":1609706354383,"results":"35","hashOfConfig":"25"},{"size":1718,"mtime":1625598068631,"results":"36","hashOfConfig":"25"},{"size":1387,"mtime":1621278347939,"results":"37","hashOfConfig":"25"},{"size":35002,"mtime":1625597316733,"results":"38","hashOfConfig":"25"},{"size":2532,"mtime":1610308142523,"results":"39","hashOfConfig":"25"},{"size":2377,"mtime":1610307636430,"results":"40","hashOfConfig":"25"},{"size":1661,"mtime":1613942351515,"results":"41","hashOfConfig":"25"},{"size":1647,"mtime":1613942363906,"results":"42","hashOfConfig":"25"},{"size":2215,"mtime":1613933417651,"results":"43","hashOfConfig":"25"},{"size":649,"mtime":1613936615464,"results":"44","hashOfConfig":"25"},{"size":471,"mtime":1613942440791,"results":"45","hashOfConfig":"25"},{"size":4537,"mtime":1625597450873,"results":"46","hashOfConfig":"25"},{"size":0,"mtime":1624471334077,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"f8ydo5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\fyp\\src\\index.js",[],["107","108"],"D:\\GitHub\\fyp\\src\\reportWebVitals.js",[],"D:\\GitHub\\fyp\\src\\login.jsx",["109"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Log in</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"customCheck1\"\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n              Remember me\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n          Sign in\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Forgot <a href=\"#\">password?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n",["110","111"],"D:\\GitHub\\fyp\\src\\signup.jsx",["112"],"import React, { Component } from \"react\";\r\n\r\nexport default class SignUp extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Register</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>First name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"First name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Last name</label>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n          Register\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Already registered <a href=\"#\">log in?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n",["113","114"],"D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx",["115"],"D:\\GitHub\\fyp\\src\\components\\temperature.jsx",["116","117"],"D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx",["118"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass TemperatureLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low Temperature of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"Temperature\",\r\n          },\r\n          min: 5,\r\n          max: 40,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemperatureLine;\r\n","D:\\GitHub\\fyp\\src\\components\\ph.jsx",[],"D:\\GitHub\\fyp\\src\\components\\ph-bar.jsx",["119"],"import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React, { Component } from \"react\";\r\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\r\n\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    theme: \"fusion\",\r\n    caption: \"PH range\",\r\n    subcaption: \"\",\r\n    lowerLimit: \"0\",\r\n    upperLimit: \"14\",\r\n    numberSuffix: \" \",\r\n    chartBottomMargin: \"40\",\r\n    valueFontSize: \"11\",\r\n    valueFontBold: \"0\",\r\n  },\r\n  colorRange: {\r\n    color: [\r\n      {\r\n        minValue: \"0\",\r\n        maxValue: \"6.9\",\r\n        label: \"Acidic\",\r\n        color: \"#F2726F\",\r\n      },\r\n      {\r\n        minValue: \"7\",\r\n        maxValue: \"7.9\",\r\n        label: \"Neutral\",\r\n        color: \"#017827\",\r\n      },\r\n      {\r\n        minValue: \"8\",\r\n        maxValue: \"14\",\r\n        label: \"Alkaline\",\r\n        color: \"#34156e\",\r\n      },\r\n    ],\r\n  },\r\n  pointers: {\r\n    pointer: [\r\n      {\r\n        value: \"7\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  annotations: {\r\n    origw: \"400\",\r\n    origh: \"190\",\r\n    autoscale: \"1\",\r\n    groups: [\r\n      {\r\n        id: \"range\",\r\n        items: [\r\n          {\r\n            id: \"rangeBg\",\r\n            type: \"rectangle\",\r\n            x: \"$chartCenterX-115\",\r\n            y: \"$chartEndY-20\",\r\n            tox: \"$chartCenterX +115\",\r\n            toy: \"$chartEndY-5\",\r\n            fillcolor: \"#0075c2\",\r\n          },\r\n          {\r\n            id: \"rangeText\",\r\n            type: \"Text\",\r\n            fontSize: \"11\",\r\n            fillcolor: \"#ffffff\",\r\n            text: \"Recommended Utilization PH Range : 7-8\",\r\n            x: \"$chartCenterX\",\r\n            y: \"$chartEndY-12\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Phbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"hlineargauge\"\r\n        width=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Phbar;\r\n","D:\\GitHub\\fyp\\src\\components\\Ph-line.jsx",[],"D:\\GitHub\\fyp\\src\\components\\ph-average-line.jsx",["120"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass PHavaverageLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [8, 7.9, 7.6, 7.5, 7.4, 7.1, 8],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [6, 7, 7.1, 6.5, 7, 6.9, 6.8],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 200,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low PH of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"PH value\",\r\n          },\r\n          min: 0,\r\n          max: 14,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PHavaverageLine;\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx",[],"D:\\GitHub\\fyp\\src\\components\\navigation.jsx",[],"D:\\GitHub\\fyp\\src\\components\\home.jsx",["121","122","123","124","125"],"D:\\GitHub\\fyp\\src\\components\\turbity.jsx",["126"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Mixlinetimechart from \"./time-line-serieschart\";\r\nimport \"./temperature.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    \"padding-top\": \"2px\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    \"z-index\": \"1\",\r\n  },\r\n  paperheading: {\r\n    \"border-bottom\": \"2px solid black\",\r\n    \"background-color\": \"green\",\r\n    \"z-index\": \"10\",\r\n  },\r\n}));\r\n\r\nexport default function Turbidity() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"temperature-container\">\r\n      <h1 className=\"project-heading\"> Sensor Data </h1>\r\n\r\n      <div className=\"temperature-sub-container\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={6}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>{\" \"}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>{\" \"}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        );\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\time-line-serieschart.jsx",["127"],"import React from \"react\";\r\n\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    caption: \"Twitter Mentions\",\r\n    yaxisname: \"Number of mentions\",\r\n    numbersuffix: \"M\",\r\n    subcaption: \"(iPhone Vs Samsung)\",\r\n    yaxismaxvalue: \"2\",\r\n    plottooltext:\r\n      \"$seriesName was mentioned <b>$dataValue</b> times on Twitter in $label\",\r\n    theme: \"fusion\",\r\n  },\r\n  categories: [\r\n    {\r\n      category: [\r\n        {\r\n          label: \"2007\",\r\n        },\r\n        {\r\n          label: \"2008\",\r\n        },\r\n        {\r\n          label: \"2009\",\r\n        },\r\n        {\r\n          label: \"2010\",\r\n        },\r\n        {\r\n          label: \"2011\",\r\n        },\r\n        {\r\n          label: \"2012\",\r\n        },\r\n        {\r\n          label: \"2013\",\r\n        },\r\n        {\r\n          label: \"2014\",\r\n        },\r\n        {\r\n          label: \"2015\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  dataset: [\r\n    {\r\n      seriesname: \"iPhone\",\r\n      data: [\r\n        {\r\n          value: \"1.90\",\r\n        },\r\n        {\r\n          value: \"1.94\",\r\n        },\r\n        {\r\n          value: \"1.69\",\r\n        },\r\n        {\r\n          value: \"1.66\",\r\n        },\r\n        {\r\n          value: \"1.43\",\r\n        },\r\n        {\r\n          value: \"1.97\",\r\n        },\r\n        {\r\n          value: \"1.78\",\r\n        },\r\n        {\r\n          value: \"1.58\",\r\n        },\r\n        {\r\n          value: \"1.55\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      seriesname: \"Samsung\",\r\n      data: [\r\n        {\r\n          value: \"0.68\",\r\n        },\r\n        {\r\n          value: \"0.74\",\r\n        },\r\n        {\r\n          value: \"0.25\",\r\n        },\r\n        {\r\n          value: \"0.64\",\r\n        },\r\n        {\r\n          value: \"0.22\",\r\n        },\r\n        {\r\n          value: \"0.74\",\r\n        },\r\n        {\r\n          value: \"0.58\",\r\n        },\r\n        {\r\n          value: \"0.15\",\r\n        },\r\n        {\r\n          value: \"0.26\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nclass MyCompPonent extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"mssplinearea\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\SignUp.jsx",["128"],"import React, { useCallback } from \"react\";\r\nimport \"./form.css\";\r\nimport { withRouter } from \"react-router\";\r\nimport app from \"../firebase\";\r\n\r\nconst SignupForm = ({ history }) => {\r\n  // Pass the useFormik() hook initial form values and a submit function that will\r\n  // be called when the form is submitted\r\n\r\n  const handleSignUp = useCallback(\r\n    async (event) => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await app\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  return (\r\n    <div class=\"maindiv\">\r\n      <div class=\"formdiv\">\r\n        <div class=\"form_image\"></div>\r\n\r\n        <div class=\"form\">\r\n          <h2>Sign Up</h2>\r\n          <form>\r\n            <div class=\"input-label\">\r\n              <input id=\"name\" name=\"name\" type=\"text\" autocomplete=\"off\" />\r\n              <label htmlFor=\"name\">Full Name</label>\r\n            </div>\r\n            <div class=\"input-label\">\r\n              <input id=\"email\" name=\"email\" type=\"email\" />\r\n              <label htmlFor=\"email\">Email Address</label>\r\n            </div>\r\n            <div class=\"input-label\">\r\n              <input id=\"password\" name=\"password\" type=\"password\" />\r\n              <label htmlFor=\"password\">Password</label>\r\n            </div>\r\n            <button type=\"submit\" class=\"submit-btn\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignupForm);\r\n","D:\\GitHub\\fyp\\src\\components\\login.jsx",["129"],"import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app from \"../firebase.js\";\r\nimport { AuthContext } from \"../Auth.js\";\r\nimport \"./form.css\";\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const handleLogin = useCallback(\r\n    async (event) => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div class=\"maindiv\">\r\n      <div class=\"formdiv\">\r\n        <div class=\"form_image\"></div>\r\n\r\n        <div class=\"form\">\r\n          <h2>Sign in</h2>\r\n\r\n          <form method=\"post\" autocomplete=\"off\">\r\n            <div class=\"input-label\">\r\n              <input type=\"email\" autocomplete=\"off\" required />\r\n              <br />\r\n              <label for=\"companyemail\"> email</label>\r\n              <br />\r\n            </div>\r\n\r\n            <div class=\"input-label\">\r\n              <input type=\"password\" autocomplete=\"off\" required />\r\n              <br />\r\n              <label for=\"jobtitle\">password</label>\r\n              <br />\r\n            </div>\r\n\r\n            <div>\r\n              <input type=\"submit\" value=\"Login\" class=\"submit-btn\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(LoginForm);\r\n","D:\\GitHub\\fyp\\src\\components\\WaterLevel.jsx",["130","131"],"import { color } from \"d3-color\";\r\nimport { interpolateRgb } from \"d3-interpolate\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport LiquidFillGauge from \"react-liquid-gauge\";\r\n\r\nclass WaterLevel extends Component {\r\n  state = {\r\n    value: 50,\r\n  };\r\n  startColor = \"#6495ed\"; // cornflowerblue\r\n  endColor = \"#dc143c\"; // crimson\r\n\r\n  render() {\r\n    const radius = 160;\r\n    const fillColor = \"#6495ed\";\r\n\r\n    return (\r\n      <div>\r\n        <LiquidFillGauge\r\n          style={{ margin: \"0 auto\" }}\r\n          width={radius * 1.5}\r\n          height={radius * 1}\r\n          value={this.state.value}\r\n          percent=\"%\"\r\n          textSize={1}\r\n          textOffsetX={0}\r\n          textOffsetY={0}\r\n          textRenderer={(props) => {\r\n            const value = Math.round(props.value);\r\n            const radius = Math.min(props.height / 2, props.width / 2);\r\n            const textPixels = (props.textSize * radius) / 2;\r\n            const valueStyle = {\r\n              fontSize: textPixels,\r\n            };\r\n            const percentStyle = {\r\n              fontSize: textPixels * 0.6,\r\n            };\r\n\r\n            return (\r\n              <tspan>\r\n                <tspan className=\"value\" style={valueStyle}>\r\n                  {value}\r\n                </tspan>\r\n                <tspan style={percentStyle}>{props.percent}</tspan>\r\n              </tspan>\r\n            );\r\n          }}\r\n          riseAnimation\r\n          waveAnimation\r\n          waveFrequency={2}\r\n          waveAmplitude={1}\r\n          circleStyle={{\r\n            fill: fillColor,\r\n          }}\r\n          waveStyle={{\r\n            fill: fillColor,\r\n          }}\r\n          textStyle={{\r\n            fill: color(\"#444\").toString(),\r\n            fontFamily: \"Arial\",\r\n          }}\r\n          waveTextStyle={{\r\n            fill: color(\"#fff\").toString(),\r\n            fontFamily: \"Arial\",\r\n          }}\r\n          onClick={() => {\r\n            this.setState({ value: Math.random() * 100 });\r\n          }}\r\n        />\r\n        <div\r\n          style={{\r\n            margin: \"20px auto\",\r\n            width: 120,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WaterLevel;\r\n","D:\\GitHub\\fyp\\src\\Auth.js",[],"D:\\GitHub\\fyp\\src\\firebase.js",[],"D:\\GitHub\\fyp\\src\\App.js",["132","133","134","135"],"D:\\GitHub\\fyp\\src\\components\\global state\\SensorData.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":44,"column":18,"nodeType":"142","endLine":44,"endColumn":30},{"ruleId":"136","replacedBy":"143"},{"ruleId":"138","replacedBy":"144"},{"ruleId":"140","severity":1,"message":"141","line":45,"column":30,"nodeType":"142","endLine":45,"endColumn":42},{"ruleId":"136","replacedBy":"145"},{"ruleId":"138","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"151","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":24},{"ruleId":"147","severity":1,"message":"152","line":23,"column":7,"nodeType":"149","messageId":"150","endLine":23,"endColumn":12},{"ruleId":"147","severity":1,"message":"148","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":4,"column":17,"nodeType":"149","messageId":"150","endLine":4,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"153","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"154","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":19},{"ruleId":"147","severity":1,"message":"155","line":2,"column":21,"nodeType":"149","messageId":"150","endLine":2,"endColumn":32},{"ruleId":"147","severity":1,"message":"156","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":24},{"ruleId":"147","severity":1,"message":"157","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":19},{"ruleId":"147","severity":1,"message":"156","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":24},{"ruleId":"147","severity":1,"message":"158","line":122,"column":7,"nodeType":"149","messageId":"150","endLine":122,"endColumn":19},{"ruleId":"147","severity":1,"message":"159","line":10,"column":9,"nodeType":"149","messageId":"150","endLine":10,"endColumn":21},{"ruleId":"147","severity":1,"message":"160","line":8,"column":9,"nodeType":"149","messageId":"150","endLine":8,"endColumn":20},{"ruleId":"147","severity":1,"message":"161","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":24},{"ruleId":"147","severity":1,"message":"162","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":16},{"ruleId":"147","severity":1,"message":"154","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"163","line":18,"column":16,"nodeType":"149","messageId":"150","endLine":18,"endColumn":23},{"ruleId":"147","severity":1,"message":"164","line":43,"column":10,"nodeType":"149","messageId":"150","endLine":43,"endColumn":22},{"ruleId":"147","severity":1,"message":"165","line":43,"column":24,"nodeType":"149","messageId":"150","endLine":43,"endColumn":39},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["166"],["167"],["166"],["167"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Temperaturegauge' is defined but never used.","'value' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'Mixlinetimechart' is defined but never used.","'Temperature' is defined but never used.","'MyCompPonent' is defined but never used.","'handleSignUp' is assigned a value but never used.","'handleLogin' is assigned a value but never used.","'interpolateRgb' is defined but never used.","'ReactDOM' is defined but never used.","'setData' is assigned a value but never used.","'dataFetching' is assigned a value but never used.","'setdataFetching' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]