[{"D:\\GitHub\\fyp\\src\\index.js":"1","D:\\GitHub\\fyp\\src\\App.js":"2","D:\\GitHub\\fyp\\src\\reportWebVitals.js":"3","D:\\GitHub\\fyp\\src\\login.jsx":"4","D:\\GitHub\\fyp\\src\\signup.jsx":"5","D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx":"6","D:\\GitHub\\fyp\\src\\components\\temperature.jsx":"7","D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx":"8","D:\\GitHub\\fyp\\src\\components\\ph.jsx":"9","D:\\GitHub\\fyp\\src\\components\\ph-bar.jsx":"10","D:\\GitHub\\fyp\\src\\components\\Ph-line.jsx":"11","D:\\GitHub\\fyp\\src\\components\\ph-average-line.jsx":"12","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx":"13","D:\\GitHub\\fyp\\src\\components\\navigation.jsx":"14","D:\\GitHub\\fyp\\src\\components\\home.jsx":"15","D:\\GitHub\\fyp\\src\\components\\turbity.jsx":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":1078,"mtime":1610211600726,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1297,"mtime":1609134579562,"results":"21","hashOfConfig":"18"},{"size":1284,"mtime":1609133478338,"results":"22","hashOfConfig":"18"},{"size":2129,"mtime":1609871523461,"results":"23","hashOfConfig":"18"},{"size":2368,"mtime":1610112575136,"results":"24","hashOfConfig":"18"},{"size":2126,"mtime":1609691519160,"results":"25","hashOfConfig":"18"},{"size":1863,"mtime":1610113000678,"results":"26","hashOfConfig":"18"},{"size":2220,"mtime":1609706224671,"results":"27","hashOfConfig":"18"},{"size":1442,"mtime":1609706471753,"results":"28","hashOfConfig":"18"},{"size":2118,"mtime":1609706354383,"results":"29","hashOfConfig":"18"},{"size":1480,"mtime":1610110894476,"results":"30","hashOfConfig":"18"},{"size":1156,"mtime":1610209873133,"results":"31","hashOfConfig":"18"},{"size":1540,"mtime":1610208515755,"results":"32","hashOfConfig":"18"},{"size":98,"mtime":1610125004917,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"f8ydo5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\GitHub\\fyp\\src\\index.js",[],["76","77"],"D:\\GitHub\\fyp\\src\\App.js",[],"D:\\GitHub\\fyp\\src\\reportWebVitals.js",[],"D:\\GitHub\\fyp\\src\\login.jsx",["78"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Log in</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"customCheck1\"\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n              Remember me\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n          Sign in\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Forgot <a href=\"#\">password?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n",["79","80"],"D:\\GitHub\\fyp\\src\\signup.jsx",["81"],"import React, { Component } from \"react\";\r\n\r\nexport default class SignUp extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Register</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>First name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"First name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Last name</label>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n          Register\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Already registered <a href=\"#\">log in?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx",["82"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass Temperaturegauge extends React.Component {\r\n  constructor(props) {\r\n    console.log(props.value);\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [Math.floor(Math.random() * 101)],\r\n      options: {\r\n        chart: {\r\n          type: \"radialBar\",\r\n          offsetY: -20,\r\n          sparkline: {\r\n            enabled: true,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          radialBar: {\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            track: {\r\n              background: \"#e7e7e7\",\r\n              strokeWidth: \"97%\",\r\n              margin: 5, // margin is in pixels\r\n              dropShadow: {\r\n                enabled: false,\r\n                top: 2,\r\n                left: 0,\r\n                color: \"#999\",\r\n                opacity: 1,\r\n                blur: 2,\r\n              },\r\n            },\r\n            dataLabels: {\r\n              name: {\r\n                show: true,\r\n              },\r\n              value: {\r\n                offsetY: -40,\r\n                fontSize: \"22px\",\r\n                formatter: function (val) {\r\n                  return val + \" â„ƒ\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          padding: {\r\n            top: -10,\r\n          },\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shade: \"light\",\r\n            shadeIntensity: 0.4,\r\n            inverseColors: false,\r\n            opacityFrom: 1,\r\n            opacityTo: 1,\r\n            stops: [0, 50, 53, 91],\r\n          },\r\n        },\r\n        labels: [\"Temperature\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ series: [this.props.value] });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"chart\" className=\"chart\">\r\n        console.log(this.props.value);\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"radialBar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temperaturegauge;\r\n","D:\\GitHub\\fyp\\src\\components\\temperature.jsx",[],"D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx",["83"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass TemperatureLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low Temperature of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"Temperature\",\r\n          },\r\n          min: 5,\r\n          max: 40,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemperatureLine;\r\n","D:\\GitHub\\fyp\\src\\components\\ph.jsx",["84","85"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Phbar from \"./ph-bar\";\r\nimport Phline from \"./Ph-line\";\r\nimport PHavaverageLine from \"./ph-average-line\";\r\n\r\nimport TemperatureLine from \"./temperature-line chart\";\r\nimport \"./temperature.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst value = Math.floor(Math.random() * 101);\r\n\r\nexport default function Ph() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"temperature-container\">\r\n      <h1 className=\"project-heading\">Ph sensor Data </h1>\r\n\r\n      <div className=\"temperature-sub-container\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={12}>\r\n              <Paper className={classes.paper}>\r\n                <Phbar />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={8}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <Phline />{\" \"}\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={2}>\r\n              <Paper className={classes.paper}>\r\n                <h3 className=\"temperature-heading\">Current PH value</h3>\r\n                <h1 className=\"temperature-value\">7 </h1>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid justify=\"center\" item xs={12} sm={12}>\r\n              <Paper className={classes.paper}>\r\n                <PHavaverageLine />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        );\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\ph-bar.jsx",["86"],"import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React, { Component } from \"react\";\r\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\r\n\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    theme: \"fusion\",\r\n    caption: \"PH range\",\r\n    subcaption: \"\",\r\n    lowerLimit: \"0\",\r\n    upperLimit: \"14\",\r\n    numberSuffix: \" \",\r\n    chartBottomMargin: \"40\",\r\n    valueFontSize: \"11\",\r\n    valueFontBold: \"0\",\r\n  },\r\n  colorRange: {\r\n    color: [\r\n      {\r\n        minValue: \"0\",\r\n        maxValue: \"6.9\",\r\n        label: \"Acidic\",\r\n        color: \"#F2726F\",\r\n      },\r\n      {\r\n        minValue: \"7\",\r\n        maxValue: \"7.9\",\r\n        label: \"Neutral\",\r\n        color: \"#017827\",\r\n      },\r\n      {\r\n        minValue: \"8\",\r\n        maxValue: \"14\",\r\n        label: \"Alkaline\",\r\n        color: \"#34156e\",\r\n      },\r\n    ],\r\n  },\r\n  pointers: {\r\n    pointer: [\r\n      {\r\n        value: \"7\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  annotations: {\r\n    origw: \"400\",\r\n    origh: \"190\",\r\n    autoscale: \"1\",\r\n    groups: [\r\n      {\r\n        id: \"range\",\r\n        items: [\r\n          {\r\n            id: \"rangeBg\",\r\n            type: \"rectangle\",\r\n            x: \"$chartCenterX-115\",\r\n            y: \"$chartEndY-20\",\r\n            tox: \"$chartCenterX +115\",\r\n            toy: \"$chartEndY-5\",\r\n            fillcolor: \"#0075c2\",\r\n          },\r\n          {\r\n            id: \"rangeText\",\r\n            type: \"Text\",\r\n            fontSize: \"11\",\r\n            fillcolor: \"#ffffff\",\r\n            text: \"Recommended Utilization PH Range : 7-8\",\r\n            x: \"$chartCenterX\",\r\n            y: \"$chartEndY-12\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Phbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"hlineargauge\"\r\n        width=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Phbar;\r\n","D:\\GitHub\\fyp\\src\\components\\Ph-line.jsx",[],"D:\\GitHub\\fyp\\src\\components\\ph-average-line.jsx",["87"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass PHavaverageLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [8, 7.9, 7.6, 7.5, 7.4, 7.1, 8],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [6, 7, 7.1, 6.5, 7, 6.9, 6.8],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 200,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low PH of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"PH value\",\r\n          },\r\n          min: 0,\r\n          max: 14,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PHavaverageLine;\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx",["88"],"import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React, { Component } from \"react\";\r\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\r\n\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\nconst dataSource = {\r\n  chart: {\r\n    caption: \"Temperature\",\r\n    lowerlimit: \"0\",\r\n    upperlimit: \"100\",\r\n    showvalue: \"1\",\r\n    numbersuffix: \" â„ƒ\",\r\n    theme: \"fusion\",\r\n    showtooltip: \"0\",\r\n  },\r\n  colorrange: {\r\n    color: [\r\n      {\r\n        minvalue: \"0\",\r\n        maxvalue: \"20\",\r\n        code: \"#2aafc7\",\r\n      },\r\n      {\r\n        minvalue: \"20\",\r\n        maxvalue: \"40\",\r\n        code: \" #5fb154\",\r\n      },\r\n      {\r\n        minvalue: \"40\",\r\n        maxvalue: \"65\",\r\n        code: \" #f04400\",\r\n      },\r\n      {\r\n        minvalue: \"65\",\r\n        maxvalue: \"100\",\r\n        code: \"#c43535\",\r\n      },\r\n    ],\r\n  },\r\n  dials: {\r\n    dial: [\r\n      {\r\n        value: \"30\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Temperaturemeter extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"angulargauge\"\r\n        width=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temperaturemeter;\r\n","D:\\GitHub\\fyp\\src\\components\\navigation.jsx",[],"D:\\GitHub\\fyp\\src\\components\\home.jsx",[],"D:\\GitHub\\fyp\\src\\components\\turbity.jsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":44,"column":18,"nodeType":"95","endLine":44,"endColumn":30},{"ruleId":"89","replacedBy":"96"},{"ruleId":"91","replacedBy":"97"},{"ruleId":"93","severity":1,"message":"94","line":45,"column":30,"nodeType":"95","endLine":45,"endColumn":42},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"102","line":9,"column":8,"nodeType":"100","messageId":"101","endLine":9,"endColumn":23},{"ruleId":"98","severity":1,"message":"103","line":23,"column":7,"nodeType":"100","messageId":"101","endLine":23,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":4,"column":17,"nodeType":"100","messageId":"101","endLine":4,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":4,"column":17,"nodeType":"100","messageId":"101","endLine":4,"endColumn":26},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["104"],["105"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'TemperatureLine' is defined but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]