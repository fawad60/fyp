[{"D:\\GitHub\\fyp\\src\\index.js":"1","D:\\GitHub\\fyp\\src\\App.js":"2","D:\\GitHub\\fyp\\src\\reportWebVitals.js":"3","D:\\GitHub\\fyp\\src\\login.jsx":"4","D:\\GitHub\\fyp\\src\\signup.jsx":"5","D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx":"6","D:\\GitHub\\fyp\\src\\components\\temperature.jsx":"7","D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx":"8","D:\\GitHub\\fyp\\src\\components\\ph.jsx":"9","D:\\GitHub\\fyp\\src\\components\\ph-bar.jsx":"10","D:\\GitHub\\fyp\\src\\components\\Ph-line.jsx":"11","D:\\GitHub\\fyp\\src\\components\\ph-average-line.jsx":"12","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx":"13","D:\\GitHub\\fyp\\src\\components\\navigation.jsx":"14","D:\\GitHub\\fyp\\src\\components\\home.jsx":"15","D:\\GitHub\\fyp\\src\\components\\turbity.jsx":"16","D:\\GitHub\\fyp\\src\\components\\time-line-serieschart.jsx":"17","D:\\GitHub\\fyp\\src\\components\\SignUp.jsx":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":1188,"mtime":1613892871933,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":1297,"mtime":1609134579562,"results":"23","hashOfConfig":"20"},{"size":1284,"mtime":1609133478338,"results":"24","hashOfConfig":"20"},{"size":2056,"mtime":1613829643853,"results":"25","hashOfConfig":"20"},{"size":2329,"mtime":1613830930125,"results":"26","hashOfConfig":"20"},{"size":2126,"mtime":1609691519160,"results":"27","hashOfConfig":"20"},{"size":1777,"mtime":1613829446070,"results":"28","hashOfConfig":"20"},{"size":2220,"mtime":1609706224671,"results":"29","hashOfConfig":"20"},{"size":1442,"mtime":1609706471753,"results":"30","hashOfConfig":"20"},{"size":2118,"mtime":1609706354383,"results":"31","hashOfConfig":"20"},{"size":1667,"mtime":1613832890121,"results":"32","hashOfConfig":"20"},{"size":1125,"mtime":1611510770772,"results":"33","hashOfConfig":"20"},{"size":33610,"mtime":1613893887456,"results":"34","hashOfConfig":"20"},{"size":2532,"mtime":1610308142523,"results":"35","hashOfConfig":"20"},{"size":2377,"mtime":1610307636430,"results":"36","hashOfConfig":"20"},{"size":2756,"mtime":1613896065885,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"f8ydo5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\GitHub\\fyp\\src\\index.js",[],["85","86"],"D:\\GitHub\\fyp\\src\\App.js",[],"D:\\GitHub\\fyp\\src\\reportWebVitals.js",[],"D:\\GitHub\\fyp\\src\\login.jsx",["87"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Log in</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"customCheck1\"\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n              Remember me\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n          Sign in\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Forgot <a href=\"#\">password?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n",["88","89"],"D:\\GitHub\\fyp\\src\\signup.jsx",["90"],"import React, { Component } from \"react\";\r\n\r\nexport default class SignUp extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Register</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>First name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"First name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Last name</label>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n          Register\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Already registered <a href=\"#\">log in?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx",["91"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass Temperaturegauge extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [Math.floor(Math.random() * 101)],\r\n      options: {\r\n        chart: {\r\n          type: \"radialBar\",\r\n          offsetY: -20,\r\n          sparkline: {\r\n            enabled: true,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          radialBar: {\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            track: {\r\n              background: \"#e7e7e7\",\r\n              strokeWidth: \"97%\",\r\n              margin: 5, // margin is in pixels\r\n              dropShadow: {\r\n                enabled: false,\r\n                top: 2,\r\n                left: 0,\r\n                color: \"#999\",\r\n                opacity: 1,\r\n                blur: 2,\r\n              },\r\n            },\r\n            dataLabels: {\r\n              name: {\r\n                show: true,\r\n              },\r\n              value: {\r\n                offsetY: -40,\r\n                fontSize: \"22px\",\r\n                formatter: function (val) {\r\n                  return val + \" â„ƒ\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          padding: {\r\n            top: -10,\r\n          },\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shade: \"light\",\r\n            shadeIntensity: 0.4,\r\n            inverseColors: false,\r\n            opacityFrom: 1,\r\n            opacityTo: 1,\r\n            stops: [0, 50, 53, 91],\r\n          },\r\n        },\r\n        labels: [\"Temperature\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ series: [this.props.value] });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"chart\" className=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"radialBar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temperaturegauge;\r\n","D:\\GitHub\\fyp\\src\\components\\temperature.jsx",["92"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Temperaturegauge from \"./temperature-gauge\";\r\nimport Thermometer from \"react-thermometer-component\";\r\nimport TemperatureLine from \"./temperature-line chart\";\r\nimport Temperaturemeter from \"./temperature-meter\";\r\nimport \"./temperature.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst value = Math.floor(Math.random() * 101);\r\n\r\nexport default function Temperature() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"temperature-container\">\r\n      <h1 className=\"project-heading\">Temperature sensor Data </h1>\r\n\r\n      <div className=\"temperature-sub-container\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            {/*    <Grid item xs={12} sm={6} md={4}>\r\n              <Paper component=\"div\" className={classes.paper}>\r\n                <h5 className=\"margin-bottom-medium\">Temperature</h5>\r\n                <Temperaturegauge value={value} />\r\n              </Paper>\r\n            </Grid>\r\n            */}\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                <Temperaturemeter value={value} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                <h5 className=\"margin-bottom-small\">Temperature</h5>\r\n\r\n                <Thermometer\r\n                  theme=\"light\"\r\n                  value={value}\r\n                  max=\"100\"\r\n                  steps=\"3\"\r\n                  format=\"Â°C\"\r\n                  size=\"large\"\r\n                  height=\"300\"\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid justify=\"center\" item xs={12} sm={12}>\r\n              <Paper className={classes.paper}>\r\n                <h2>Temperature Trend</h2>\r\n                <TemperatureLine />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        );\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx",["93"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass TemperatureLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low Temperature of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"Temperature\",\r\n          },\r\n          min: 5,\r\n          max: 40,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemperatureLine;\r\n","D:\\GitHub\\fyp\\src\\components\\ph.jsx",[],"D:\\GitHub\\fyp\\src\\components\\ph-bar.jsx",["94"],"import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React, { Component } from \"react\";\r\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\r\n\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    theme: \"fusion\",\r\n    caption: \"PH range\",\r\n    subcaption: \"\",\r\n    lowerLimit: \"0\",\r\n    upperLimit: \"14\",\r\n    numberSuffix: \" \",\r\n    chartBottomMargin: \"40\",\r\n    valueFontSize: \"11\",\r\n    valueFontBold: \"0\",\r\n  },\r\n  colorRange: {\r\n    color: [\r\n      {\r\n        minValue: \"0\",\r\n        maxValue: \"6.9\",\r\n        label: \"Acidic\",\r\n        color: \"#F2726F\",\r\n      },\r\n      {\r\n        minValue: \"7\",\r\n        maxValue: \"7.9\",\r\n        label: \"Neutral\",\r\n        color: \"#017827\",\r\n      },\r\n      {\r\n        minValue: \"8\",\r\n        maxValue: \"14\",\r\n        label: \"Alkaline\",\r\n        color: \"#34156e\",\r\n      },\r\n    ],\r\n  },\r\n  pointers: {\r\n    pointer: [\r\n      {\r\n        value: \"7\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  annotations: {\r\n    origw: \"400\",\r\n    origh: \"190\",\r\n    autoscale: \"1\",\r\n    groups: [\r\n      {\r\n        id: \"range\",\r\n        items: [\r\n          {\r\n            id: \"rangeBg\",\r\n            type: \"rectangle\",\r\n            x: \"$chartCenterX-115\",\r\n            y: \"$chartEndY-20\",\r\n            tox: \"$chartCenterX +115\",\r\n            toy: \"$chartEndY-5\",\r\n            fillcolor: \"#0075c2\",\r\n          },\r\n          {\r\n            id: \"rangeText\",\r\n            type: \"Text\",\r\n            fontSize: \"11\",\r\n            fillcolor: \"#ffffff\",\r\n            text: \"Recommended Utilization PH Range : 7-8\",\r\n            x: \"$chartCenterX\",\r\n            y: \"$chartEndY-12\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Phbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"hlineargauge\"\r\n        width=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Phbar;\r\n","D:\\GitHub\\fyp\\src\\components\\Ph-line.jsx",[],"D:\\GitHub\\fyp\\src\\components\\ph-average-line.jsx",["95"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass PHavaverageLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [8, 7.9, 7.6, 7.5, 7.4, 7.1, 8],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [6, 7, 7.1, 6.5, 7, 6.9, 6.8],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 200,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low PH of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"PH value\",\r\n          },\r\n          min: 0,\r\n          max: 14,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PHavaverageLine;\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx",[],"D:\\GitHub\\fyp\\src\\components\\navigation.jsx",[],"D:\\GitHub\\fyp\\src\\components\\home.jsx",["96","97"],"D:\\GitHub\\fyp\\src\\components\\turbity.jsx",["98"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Mixlinetimechart from \"./time-line-serieschart\";\r\nimport \"./temperature.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    \"padding-top\": \"2px\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    \"z-index\": \"1\",\r\n  },\r\n  paperheading: {\r\n    \"border-bottom\": \"2px solid black\",\r\n    \"background-color\": \"green\",\r\n    \"z-index\": \"10\",\r\n  },\r\n}));\r\n\r\nexport default function Turbidity() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"temperature-container\">\r\n      <h1 className=\"project-heading\"> Sensor Data </h1>\r\n\r\n      <div className=\"temperature-sub-container\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={6}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>{\" \"}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>{\" \"}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Paper className={classes.paper}>\r\n                {\" \"}\r\n                <h2 className=\"headingdiv\">Fetching Data.........</h2>\r\n                <h2 className=\"red\"> Please Be patient....</h2>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        );\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\time-line-serieschart.jsx",["99"],"import React from \"react\";\r\n\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    caption: \"Twitter Mentions\",\r\n    yaxisname: \"Number of mentions\",\r\n    numbersuffix: \"M\",\r\n    subcaption: \"(iPhone Vs Samsung)\",\r\n    yaxismaxvalue: \"2\",\r\n    plottooltext:\r\n      \"$seriesName was mentioned <b>$dataValue</b> times on Twitter in $label\",\r\n    theme: \"fusion\",\r\n  },\r\n  categories: [\r\n    {\r\n      category: [\r\n        {\r\n          label: \"2007\",\r\n        },\r\n        {\r\n          label: \"2008\",\r\n        },\r\n        {\r\n          label: \"2009\",\r\n        },\r\n        {\r\n          label: \"2010\",\r\n        },\r\n        {\r\n          label: \"2011\",\r\n        },\r\n        {\r\n          label: \"2012\",\r\n        },\r\n        {\r\n          label: \"2013\",\r\n        },\r\n        {\r\n          label: \"2014\",\r\n        },\r\n        {\r\n          label: \"2015\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  dataset: [\r\n    {\r\n      seriesname: \"iPhone\",\r\n      data: [\r\n        {\r\n          value: \"1.90\",\r\n        },\r\n        {\r\n          value: \"1.94\",\r\n        },\r\n        {\r\n          value: \"1.69\",\r\n        },\r\n        {\r\n          value: \"1.66\",\r\n        },\r\n        {\r\n          value: \"1.43\",\r\n        },\r\n        {\r\n          value: \"1.97\",\r\n        },\r\n        {\r\n          value: \"1.78\",\r\n        },\r\n        {\r\n          value: \"1.58\",\r\n        },\r\n        {\r\n          value: \"1.55\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      seriesname: \"Samsung\",\r\n      data: [\r\n        {\r\n          value: \"0.68\",\r\n        },\r\n        {\r\n          value: \"0.74\",\r\n        },\r\n        {\r\n          value: \"0.25\",\r\n        },\r\n        {\r\n          value: \"0.64\",\r\n        },\r\n        {\r\n          value: \"0.22\",\r\n        },\r\n        {\r\n          value: \"0.74\",\r\n        },\r\n        {\r\n          value: \"0.58\",\r\n        },\r\n        {\r\n          value: \"0.15\",\r\n        },\r\n        {\r\n          value: \"0.26\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nclass MyCompPonent extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"mssplinearea\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\SignUp.jsx",["100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":44,"column":18,"nodeType":"107","endLine":44,"endColumn":30},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","replacedBy":"109"},{"ruleId":"105","severity":1,"message":"106","line":45,"column":30,"nodeType":"107","endLine":45,"endColumn":42},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"114","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":24},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":4,"column":17,"nodeType":"112","messageId":"113","endLine":4,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"115","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":24},{"ruleId":"110","severity":1,"message":"116","line":13,"column":7,"nodeType":"112","messageId":"113","endLine":13,"endColumn":24},{"ruleId":"110","severity":1,"message":"115","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":24},{"ruleId":"110","severity":1,"message":"117","line":122,"column":7,"nodeType":"112","messageId":"113","endLine":122,"endColumn":19},{"ruleId":"110","severity":1,"message":"118","line":4,"column":7,"nodeType":"112","messageId":"113","endLine":4,"endColumn":15},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["119"],["120"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Temperaturegauge' is defined but never used.","'Mixlinetimechart' is defined but never used.","'GlobalDataUpdater' is assigned a value but never used.","'MyCompPonent' is defined but never used.","'validate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]