[{"D:\\GitHub\\fyp\\src\\index.js":"1","D:\\GitHub\\fyp\\src\\reportWebVitals.js":"2","D:\\GitHub\\fyp\\src\\App.js":"3","D:\\GitHub\\fyp\\src\\components\\temperature.jsx":"4","D:\\GitHub\\fyp\\src\\components\\navigation.jsx":"5","D:\\GitHub\\fyp\\src\\components\\home.jsx":"6","D:\\GitHub\\fyp\\src\\components\\turbity.jsx":"7","D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx":"8","D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx":"9","D:\\GitHub\\fyp\\src\\components\\WaterLevel.jsx":"10","D:\\GitHub\\fyp\\src\\components\\time-line-serieschart.jsx":"11","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx":"12","D:\\GitHub\\fyp\\src\\components\\linechart.jsx":"13","D:\\GitHub\\fyp\\src\\components\\Tds.jsx":"14","D:\\GitHub\\fyp\\src\\components\\Tds-line.jsx":"15","D:\\GitHub\\fyp\\src\\components\\Tds-average-line.jsx":"16","D:\\GitHub\\fyp\\src\\components\\tds-bar.jsx":"17"},{"size":500,"mtime":1613935049235,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":4064,"mtime":1625732559971,"results":"21","hashOfConfig":"19"},{"size":3039,"mtime":1625717932535,"results":"22","hashOfConfig":"19"},{"size":1389,"mtime":1625659210758,"results":"23","hashOfConfig":"19"},{"size":35333,"mtime":1625732672026,"results":"24","hashOfConfig":"19"},{"size":1529,"mtime":1625686817441,"results":"25","hashOfConfig":"19"},{"size":2087,"mtime":1625685085846,"results":"26","hashOfConfig":"19"},{"size":2426,"mtime":1625686875720,"results":"27","hashOfConfig":"19"},{"size":2215,"mtime":1613933417651,"results":"28","hashOfConfig":"19"},{"size":2377,"mtime":1610307636430,"results":"29","hashOfConfig":"19"},{"size":1677,"mtime":1625658643966,"results":"30","hashOfConfig":"19"},{"size":731,"mtime":1625720515956,"results":"31","hashOfConfig":"19"},{"size":1505,"mtime":1625685074204,"results":"32","hashOfConfig":"19"},{"size":1462,"mtime":1625685311301,"results":"33","hashOfConfig":"19"},{"size":2131,"mtime":1625687152489,"results":"34","hashOfConfig":"19"},{"size":2232,"mtime":1625685859666,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"f8ydo5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\GitHub\\fyp\\src\\index.js",[],["73","74"],"D:\\GitHub\\fyp\\src\\reportWebVitals.js",[],"D:\\GitHub\\fyp\\src\\App.js",["75"],"D:\\GitHub\\fyp\\src\\components\\temperature.jsx",["76","77","78"],"D:\\GitHub\\fyp\\src\\components\\navigation.jsx",[],"D:\\GitHub\\fyp\\src\\components\\home.jsx",["79","80","81","82","83","84"],"D:\\GitHub\\fyp\\src\\components\\turbity.jsx",["85"],"D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx",["86"],"D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx",["87"],"D:\\GitHub\\fyp\\src\\components\\WaterLevel.jsx",["88","89"],"import { color } from \"d3-color\";\r\nimport { interpolateRgb } from \"d3-interpolate\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport LiquidFillGauge from \"react-liquid-gauge\";\r\n\r\nclass WaterLevel extends Component {\r\n  state = {\r\n    value: 50,\r\n  };\r\n  startColor = \"#6495ed\"; // cornflowerblue\r\n  endColor = \"#dc143c\"; // crimson\r\n\r\n  render() {\r\n    const radius = 160;\r\n    const fillColor = \"#6495ed\";\r\n\r\n    return (\r\n      <div>\r\n        <LiquidFillGauge\r\n          style={{ margin: \"0 auto\" }}\r\n          width={radius * 1.5}\r\n          height={radius * 1}\r\n          value={this.state.value}\r\n          percent=\"%\"\r\n          textSize={1}\r\n          textOffsetX={0}\r\n          textOffsetY={0}\r\n          textRenderer={(props) => {\r\n            const value = Math.round(props.value);\r\n            const radius = Math.min(props.height / 2, props.width / 2);\r\n            const textPixels = (props.textSize * radius) / 2;\r\n            const valueStyle = {\r\n              fontSize: textPixels,\r\n            };\r\n            const percentStyle = {\r\n              fontSize: textPixels * 0.6,\r\n            };\r\n\r\n            return (\r\n              <tspan>\r\n                <tspan className=\"value\" style={valueStyle}>\r\n                  {value}\r\n                </tspan>\r\n                <tspan style={percentStyle}>{props.percent}</tspan>\r\n              </tspan>\r\n            );\r\n          }}\r\n          riseAnimation\r\n          waveAnimation\r\n          waveFrequency={2}\r\n          waveAmplitude={1}\r\n          circleStyle={{\r\n            fill: fillColor,\r\n          }}\r\n          waveStyle={{\r\n            fill: fillColor,\r\n          }}\r\n          textStyle={{\r\n            fill: color(\"#444\").toString(),\r\n            fontFamily: \"Arial\",\r\n          }}\r\n          waveTextStyle={{\r\n            fill: color(\"#fff\").toString(),\r\n            fontFamily: \"Arial\",\r\n          }}\r\n          onClick={() => {\r\n            this.setState({ value: Math.random() * 100 });\r\n          }}\r\n        />\r\n        <div\r\n          style={{\r\n            margin: \"20px auto\",\r\n            width: 120,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WaterLevel;\r\n","D:\\GitHub\\fyp\\src\\components\\time-line-serieschart.jsx",["90"],"import React from \"react\";\r\n\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    caption: \"Twitter Mentions\",\r\n    yaxisname: \"Number of mentions\",\r\n    numbersuffix: \"M\",\r\n    subcaption: \"(iPhone Vs Samsung)\",\r\n    yaxismaxvalue: \"2\",\r\n    plottooltext:\r\n      \"$seriesName was mentioned <b>$dataValue</b> times on Twitter in $label\",\r\n    theme: \"fusion\",\r\n  },\r\n  categories: [\r\n    {\r\n      category: [\r\n        {\r\n          label: \"2007\",\r\n        },\r\n        {\r\n          label: \"2008\",\r\n        },\r\n        {\r\n          label: \"2009\",\r\n        },\r\n        {\r\n          label: \"2010\",\r\n        },\r\n        {\r\n          label: \"2011\",\r\n        },\r\n        {\r\n          label: \"2012\",\r\n        },\r\n        {\r\n          label: \"2013\",\r\n        },\r\n        {\r\n          label: \"2014\",\r\n        },\r\n        {\r\n          label: \"2015\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  dataset: [\r\n    {\r\n      seriesname: \"iPhone\",\r\n      data: [\r\n        {\r\n          value: \"1.90\",\r\n        },\r\n        {\r\n          value: \"1.94\",\r\n        },\r\n        {\r\n          value: \"1.69\",\r\n        },\r\n        {\r\n          value: \"1.66\",\r\n        },\r\n        {\r\n          value: \"1.43\",\r\n        },\r\n        {\r\n          value: \"1.97\",\r\n        },\r\n        {\r\n          value: \"1.78\",\r\n        },\r\n        {\r\n          value: \"1.58\",\r\n        },\r\n        {\r\n          value: \"1.55\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      seriesname: \"Samsung\",\r\n      data: [\r\n        {\r\n          value: \"0.68\",\r\n        },\r\n        {\r\n          value: \"0.74\",\r\n        },\r\n        {\r\n          value: \"0.25\",\r\n        },\r\n        {\r\n          value: \"0.64\",\r\n        },\r\n        {\r\n          value: \"0.22\",\r\n        },\r\n        {\r\n          value: \"0.74\",\r\n        },\r\n        {\r\n          value: \"0.58\",\r\n        },\r\n        {\r\n          value: \"0.15\",\r\n        },\r\n        {\r\n          value: \"0.26\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nclass MyCompPonent extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"mssplinearea\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx",[],"D:\\GitHub\\fyp\\src\\components\\linechart.jsx",[],"D:\\GitHub\\fyp\\src\\components\\Tds.jsx",[],"D:\\GitHub\\fyp\\src\\components\\Tds-line.jsx",[],"D:\\GitHub\\fyp\\src\\components\\Tds-average-line.jsx",["91"],"D:\\GitHub\\fyp\\src\\components\\tds-bar.jsx",["92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":68,"column":6,"nodeType":"99","endLine":68,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":24},{"ruleId":"101","severity":1,"message":"105","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":17},{"ruleId":"101","severity":1,"message":"106","line":24,"column":7,"nodeType":"103","messageId":"104","endLine":24,"endColumn":12},{"ruleId":"101","severity":1,"message":"107","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"108","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":19},{"ruleId":"101","severity":1,"message":"109","line":2,"column":21,"nodeType":"103","messageId":"104","endLine":2,"endColumn":32},{"ruleId":"101","severity":1,"message":"110","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":24},{"ruleId":"101","severity":1,"message":"111","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":18},{"ruleId":"101","severity":1,"message":"112","line":10,"column":8,"nodeType":"103","messageId":"104","endLine":10,"endColumn":19},{"ruleId":"101","severity":1,"message":"110","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":24},{"ruleId":"101","severity":1,"message":"113","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"113","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"114","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":24},{"ruleId":"101","severity":1,"message":"115","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":16},{"ruleId":"101","severity":1,"message":"116","line":122,"column":7,"nodeType":"103","messageId":"104","endLine":122,"endColumn":19},{"ruleId":"101","severity":1,"message":"113","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"113","line":4,"column":17,"nodeType":"103","messageId":"104","endLine":4,"endColumn":26},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Data'. Either include it or remove the dependency array.","ArrayExpression",["119"],"no-unused-vars","'Temperaturegauge' is defined but never used.","Identifier","unusedVar","'LineChart' is defined but never used.","'value' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'Mixlinetimechart' is defined but never used.","'WaterLevel' is defined but never used.","'Temperature' is defined but never used.","'Component' is defined but never used.","'interpolateRgb' is defined but never used.","'ReactDOM' is defined but never used.","'MyCompPonent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [Data]",{"range":"122","text":"123"},[1978,1980],"[Data]"]