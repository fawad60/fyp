[{"D:\\GitHub\\fyp\\src\\index.js":"1","D:\\GitHub\\fyp\\src\\App.js":"2","D:\\GitHub\\fyp\\src\\reportWebVitals.js":"3","D:\\GitHub\\fyp\\src\\login.jsx":"4","D:\\GitHub\\fyp\\src\\signup.jsx":"5","D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx":"6","D:\\GitHub\\fyp\\src\\components\\temperature.jsx":"7","D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx":"8","D:\\GitHub\\fyp\\src\\components\\ph.jsx":"9","D:\\GitHub\\fyp\\src\\components\\ph-bar.jsx":"10","D:\\GitHub\\fyp\\src\\components\\Ph-line.jsx":"11","D:\\GitHub\\fyp\\src\\components\\ph-average-line.jsx":"12","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx":"13","D:\\GitHub\\fyp\\src\\components\\navigation.jsx":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":715,"mtime":1610113224689,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1297,"mtime":1609134579562,"results":"19","hashOfConfig":"16"},{"size":1284,"mtime":1609133478338,"results":"20","hashOfConfig":"16"},{"size":2129,"mtime":1609871523461,"results":"21","hashOfConfig":"16"},{"size":2368,"mtime":1610112575136,"results":"22","hashOfConfig":"16"},{"size":2126,"mtime":1609691519160,"results":"23","hashOfConfig":"16"},{"size":1863,"mtime":1610113000678,"results":"24","hashOfConfig":"16"},{"size":2220,"mtime":1609706224671,"results":"25","hashOfConfig":"16"},{"size":1442,"mtime":1609706471753,"results":"26","hashOfConfig":"16"},{"size":2118,"mtime":1609706354383,"results":"27","hashOfConfig":"16"},{"size":1480,"mtime":1610110894476,"results":"28","hashOfConfig":"16"},{"size":229,"mtime":1610111413955,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"f8ydo5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\fyp\\src\\index.js",[],["66","67"],"D:\\GitHub\\fyp\\src\\App.js",["68","69","70"],"import logo from \"./logo.svg\";\nimport SignUp from \"./signup.jsx\";\nimport Login from \"./login.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Ph from \"./components/ph\";\nimport Temperature from \"./components/temperature\";\nimport { Navigation } from \"./components/navigation\";\nimport \"./App.css\";\nimport \"./components/temperature.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"layout\">\n        <Navigation />\n        <div className=\"body\">\n          <h1 className=\"project-heading\">\n            Water quality monitoring and disease prevention\n          </h1>\n\n          <Temperature />\n          <Ph />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\GitHub\\fyp\\src\\reportWebVitals.js",[],"D:\\GitHub\\fyp\\src\\login.jsx",["71"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Log in</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"customCheck1\"\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n              Remember me\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n          Sign in\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Forgot <a href=\"#\">password?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","D:\\GitHub\\fyp\\src\\signup.jsx",["72"],"import React, { Component } from \"react\";\r\n\r\nexport default class SignUp extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Register</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>First name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"First name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Last name</label>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n          Register\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Already registered <a href=\"#\">log in?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-gauge.jsx",["73"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass Temperaturegauge extends React.Component {\r\n  constructor(props) {\r\n    console.log(props.value);\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [Math.floor(Math.random() * 101)],\r\n      options: {\r\n        chart: {\r\n          type: \"radialBar\",\r\n          offsetY: -20,\r\n          sparkline: {\r\n            enabled: true,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          radialBar: {\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            track: {\r\n              background: \"#e7e7e7\",\r\n              strokeWidth: \"97%\",\r\n              margin: 5, // margin is in pixels\r\n              dropShadow: {\r\n                enabled: false,\r\n                top: 2,\r\n                left: 0,\r\n                color: \"#999\",\r\n                opacity: 1,\r\n                blur: 2,\r\n              },\r\n            },\r\n            dataLabels: {\r\n              name: {\r\n                show: true,\r\n              },\r\n              value: {\r\n                offsetY: -40,\r\n                fontSize: \"22px\",\r\n                formatter: function (val) {\r\n                  return val + \" â„ƒ\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          padding: {\r\n            top: -10,\r\n          },\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shade: \"light\",\r\n            shadeIntensity: 0.4,\r\n            inverseColors: false,\r\n            opacityFrom: 1,\r\n            opacityTo: 1,\r\n            stops: [0, 50, 53, 91],\r\n          },\r\n        },\r\n        labels: [\"Temperature\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ series: [this.props.value] });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"chart\" className=\"chart\">\r\n        console.log(this.props.value);\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"radialBar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temperaturegauge;\r\n","D:\\GitHub\\fyp\\src\\components\\temperature.jsx",[],"D:\\GitHub\\fyp\\src\\components\\temperature-line chart.jsx",["74"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass TemperatureLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low Temperature of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"Temperature\",\r\n          },\r\n          min: 5,\r\n          max: 40,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemperatureLine;\r\n","D:\\GitHub\\fyp\\src\\components\\ph.jsx",["75","76"],"D:\\GitHub\\fyp\\src\\components\\ph-bar.jsx",["77"],"import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React, { Component } from \"react\";\r\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\r\n\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    theme: \"fusion\",\r\n    caption: \"PH range\",\r\n    subcaption: \"\",\r\n    lowerLimit: \"0\",\r\n    upperLimit: \"14\",\r\n    numberSuffix: \" \",\r\n    chartBottomMargin: \"40\",\r\n    valueFontSize: \"11\",\r\n    valueFontBold: \"0\",\r\n  },\r\n  colorRange: {\r\n    color: [\r\n      {\r\n        minValue: \"0\",\r\n        maxValue: \"6.9\",\r\n        label: \"Acidic\",\r\n        color: \"#F2726F\",\r\n      },\r\n      {\r\n        minValue: \"7\",\r\n        maxValue: \"7.9\",\r\n        label: \"Neutral\",\r\n        color: \"#017827\",\r\n      },\r\n      {\r\n        minValue: \"8\",\r\n        maxValue: \"14\",\r\n        label: \"Alkaline\",\r\n        color: \"#34156e\",\r\n      },\r\n    ],\r\n  },\r\n  pointers: {\r\n    pointer: [\r\n      {\r\n        value: \"7\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  annotations: {\r\n    origw: \"400\",\r\n    origh: \"190\",\r\n    autoscale: \"1\",\r\n    groups: [\r\n      {\r\n        id: \"range\",\r\n        items: [\r\n          {\r\n            id: \"rangeBg\",\r\n            type: \"rectangle\",\r\n            x: \"$chartCenterX-115\",\r\n            y: \"$chartEndY-20\",\r\n            tox: \"$chartCenterX +115\",\r\n            toy: \"$chartEndY-5\",\r\n            fillcolor: \"#0075c2\",\r\n          },\r\n          {\r\n            id: \"rangeText\",\r\n            type: \"Text\",\r\n            fontSize: \"11\",\r\n            fillcolor: \"#ffffff\",\r\n            text: \"Recommended Utilization PH Range : 7-8\",\r\n            x: \"$chartCenterX\",\r\n            y: \"$chartEndY-12\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Phbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"hlineargauge\"\r\n        width=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Phbar;\r\n","D:\\GitHub\\fyp\\src\\components\\Ph-line.jsx",[],"D:\\GitHub\\fyp\\src\\components\\ph-average-line.jsx",["78"],"import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass PHavaverageLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"High - 2020\",\r\n          data: [8, 7.9, 7.6, 7.5, 7.4, 7.1, 8],\r\n        },\r\n        {\r\n          name: \"Low - 2020\",\r\n          data: [6, 7, 7.1, 6.5, 7, 6.9, 6.8],\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 200,\r\n          type: \"line\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#000\",\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2,\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        colors: [\"#77B6EA\", \"#545454\"],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        title: {\r\n          text: \"Average High & Low PH of previous months\",\r\n          align: \"left\",\r\n        },\r\n        grid: {\r\n          borderColor: \"#e7e7e7\",\r\n          row: {\r\n            colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          title: {\r\n            text: \"Month\",\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"PH value\",\r\n          },\r\n          min: 0,\r\n          max: 14,\r\n        },\r\n        legend: {\r\n          position: \"top\",\r\n          horizontalAlign: \"right\",\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height={350}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PHavaverageLine;\r\n","D:\\GitHub\\fyp\\src\\components\\temperature-meter.jsx",["79"],"D:\\GitHub\\fyp\\src\\components\\navigation.jsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":14},{"ruleId":"84","severity":1,"message":"89","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":44,"column":18,"nodeType":"92","endLine":44,"endColumn":30},{"ruleId":"90","severity":1,"message":"91","line":45,"column":30,"nodeType":"92","endLine":45,"endColumn":42},{"ruleId":"84","severity":1,"message":"93","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"93","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"94","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":23},{"ruleId":"84","severity":1,"message":"95","line":23,"column":7,"nodeType":"86","messageId":"87","endLine":23,"endColumn":12},{"ruleId":"84","severity":1,"message":"93","line":4,"column":17,"nodeType":"86","messageId":"87","endLine":4,"endColumn":26},{"ruleId":"84","severity":1,"message":"93","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"93","line":4,"column":17,"nodeType":"86","messageId":"87","endLine":4,"endColumn":26},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'Login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'TemperatureLine' is defined but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]